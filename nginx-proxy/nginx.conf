events {}

http {

    upstream auth_microservice {
        server auth_microservice:5000;
    }

    upstream doc_microservice {
        server doc_microservice:5005;
    }

    upstream pat_microservice {
        server pat_microservice:5010;
    }

    server {
        listen 80;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;

        ssl_certificate /etc/nginx/certs/localhost.pem;
        ssl_certificate_key /etc/nginx/certs/localhost.key;

                # Aggiungi questa regola per rimuovere lo slash finale
        if ($request_uri ~* ^(.+)/$) {
            return 301 $1;
        }

        location ~ ^/(login|register|invalidate)$ {
            proxy_pass http://auth_microservice;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Cookie $http_cookie;  # Inoltra i cookie
        }

        location ~ ^/(homedoc|logoutdoc)$ {
            proxy_pass http://doc_microservice;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Cookie $http_cookie;  # Inoltra i cookie
        }

        location ~ ^/(homepat|logoutpat)$ {
            proxy_pass http://pat_microservice;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Cookie $http_cookie;  # Inoltra i cookie
        }

        location / {
            proxy_pass http://auth_microservice;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Cookie $http_cookie;  # Inoltra i cookie
        }
    }
}
